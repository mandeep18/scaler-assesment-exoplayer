plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}
apply from: '../flavors.gradle'

android {
    with flavorConfig

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
    }

    productFlavors {

        development {
            applicationId "com.example.scaler.development"
        }

        production {
            applicationId "com.example.scaler"
        }

    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

    signingConfigs {
        release {
            // Enable both signatures
            v1SigningEnabled true
            v2SigningEnabled true

            storeFile file(String.valueOf(System.getenv("KEYSTORE_FILE")))
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_KEY_ALIAS")
            keyPassword System.getenv("KEYSTORE_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false

            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
            //shrinkResources true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
            signingConfig signingConfigs.release
            shrinkResources true
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "mandeep_assesment_${variant.flavorName}_${variant.buildType.name}_${versionName}.apk"
        }
    }
}

dependencies {

}